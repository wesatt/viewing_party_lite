---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<api_key>&query=dracula
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 18 Jul 2022 19:23:54 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 97d9fba07ea9b58446de67c2f4b07146.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX53-P1
      X-Amz-Cf-Id:
      - 7axEQQk2hFQy94rMwlQXhaQKwBKtTGWl5NB1sF7U2OdkLHpJl1_R_g==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 18 Jul 2022 19:23:54 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<api_key>&page=2&query=dracula
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 18 Jul 2022 19:23:54 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 4dcdeec31cc51cbb90ca4f534e0fdb9c.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX53-P1
      X-Amz-Cf-Id:
      - GlpfWoHlGco36wwB96us_clduhg2g0Ygifr7x7AdmQHVV2ltZeRGEA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 18 Jul 2022 19:23:54 GMT
recorded_with: VCR 6.1.0
